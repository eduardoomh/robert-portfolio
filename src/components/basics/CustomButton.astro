---
import ButtonIcon from '../buttonIcons/ButtonIcon';

/* Este componente maneja un botón con un slot para el texto y un icono SVG */
export interface Props {
  link: string;
  type: 'regular' | 'CV' | 'send';
}

const { link, type } = Astro.props;
---

<div class="button-container">
<a href={link} target="_blank" rel="noopener noreferrer" class="btn">
  <span class="btn-text">
    <slot />
    <!-- Aquí se inyectará el texto del botón -->
  </span>
  <!-- Icono SVG -->
  <ButtonIcon iconType={type} className='btn-icon' />
</a>
</div>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 10px; /* Espacio entre el texto y el icono */
    width: calc(100% - 30px);
    max-width: 400px;
    height: 50px;
    padding: 0 15px;
    border: 2px solid var(--secondary-green);
    background-color: transparent;
    color: var(--primary-white);
    font-weight: 600;
    font-size: 18px;
    border-radius: 4px;
    cursor: pointer;
    text-decoration: none;
    transition: all 0.3s ease;
    margin: 10px 0;
  }
  .btn-text {
    display: inline-block;
  }

  .btn-icon {
    fill: #f7f7f7;
    width: 20px;
    height: 24px;
    margin-top: 4px;
  }

  .btn:not(:disabled):hover {
    transform: scale(1.05);

  }

  .btn:not(:disabled):hover:active {
    transform: scale(1.05) translateY(0.125rem);
  }

  .btn:focus {
    outline: 0 solid transparent;
  }

  .btn:focus:before {
    content: "";
    left: calc(-1 * 0.375rem);
    pointer-events: none;
    position: absolute;
    top: calc(-1 * 0.375rem);
    transition: border-radius;
    user-select: none;
  }

  .btn:focus:not(:focus-visible) {
    outline: 0 solid transparent;
  }

  .btn:focus:not(:focus-visible):before {
    border-width: 0;
  }

  .btn:not(:disabled):active {
    transform: translateY(0.125rem);
  }

  @media (min-width: 768px) {
    .btn {
      min-width: 200px;
      max-width: 100%;
    }
  }
</style>